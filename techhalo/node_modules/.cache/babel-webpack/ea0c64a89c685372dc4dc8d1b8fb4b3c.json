{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../../services_admin/category.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddCategoryComponent_Admin_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"h2\", 3);\n    i0.ɵɵtext(2, \"Th\\u00EAm lo\\u1EA1i s\\u1EA3n ph\\u1EA9m \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"form\", 5);\n    i0.ɵɵelement(5, \"input\", 6);\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelementStart(8, \"label\", 9);\n    i0.ɵɵtext(9, \"T\\u00EAn lo\\u1EA1i s\\u1EA3n ph\\u1EA9m:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 10);\n    i0.ɵɵelementStart(11, \"small\", 11);\n    i0.ɵɵtext(12, \"H\\u00E3y nh\\u1EADp \\u0111\\u00FAng t\\u00EAn danh m\\u1EE5c\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AddCategoryComponent_Admin_ng_template_0_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.save();\n    });\n    i0.ɵɵtext(14, \"Th\\u00EAm\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.postForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, ((tmp_1_0 = ctx_r1.postForm.get(\"categoryName\")) == null ? null : tmp_1_0.touched) && ((tmp_1_0 = ctx_r1.postForm.get(\"categoryName\")) == null ? null : tmp_1_0.invalid)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.postForm == null ? null : ctx_r1.postForm.invalid);\n  }\n}\nexport let AddCategoryComponent_Admin = /*#__PURE__*/(() => {\n  class AddCategoryComponent_Admin {\n    constructor(modalService, categoryService, toastr) {\n      this.modalService = modalService;\n      this.categoryService = categoryService;\n      this.toastr = toastr;\n      this.categories = []; // Danh sách các danh mục đã có\n      this.saveFinish = new EventEmitter();\n      this.postForm = new FormGroup({\n        'categoryId': new FormControl(0),\n        'categoryName': new FormControl(null, [Validators.required, Validators.minLength(2)]),\n        'status': new FormControl(true)\n      });\n    }\n    // Gọi service để lấy danh sách các danh mục\n    loadCategories() {\n      this.categoryService.getAll().subscribe(data => {\n        // Giả sử dữ liệu từ API là một mảng các Category\n        this.categories = data; // Ép kiểu dữ liệu về Category[]\n      }, error => {\n        this.toastr.error('Lỗi khi tải danh mục!', 'Hệ thống');\n      });\n    }\n    // Kiểm tra xem tên danh mục có tồn tại không\n    isCategoryNameExist(name) {\n      return this.categories.some(category => category.categoryName.toLowerCase() === name.toLowerCase());\n    }\n    ngOnInit() {\n      this.loadCategories(); // Gọi ngay khi component được khởi tạo\n    }\n    open(content) {\n      this.modalService.open(content, {\n        centered: true\n      });\n    }\n    save() {\n      if (this.postForm.valid) {\n        const categoryName = this.postForm.value.categoryName;\n        // Kiểm tra xem tên danh mục đã tồn tại chưa\n        if (this.isCategoryNameExist(categoryName)) {\n          this.toastr.warning('Tên danh mục này đã tồn tại!', 'Thông báo');\n          return;\n        }\n        // Nếu không tồn tại, thực hiện thêm mới danh mục\n        this.categoryService.post(this.postForm.value).subscribe(data => {\n          this.modalService.dismissAll();\n          this.toastr.success('Thêm thành công!', 'Hệ thống');\n          this.saveFinish.emit('done');\n          this.loadCategories(); // Lấy lại danh mục mới sau khi thêm\n        }, error => {\n          this.toastr.error('Thêm thất bại!', 'Hệ thống');\n        });\n        // Reset form\n        this.postForm.reset({\n          categoryId: 0,\n          categoryName: null,\n          status: true\n        });\n      } else {\n        this.toastr.error('Thông tin không hợp lệ!', 'Hệ thống');\n      }\n    }\n  }\n  AddCategoryComponent_Admin.ɵfac = function AddCategoryComponent_Admin_Factory(t) {\n    return new (t || AddCategoryComponent_Admin)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  AddCategoryComponent_Admin.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddCategoryComponent_Admin,\n    selectors: [[\"app-add-category\"]],\n    outputs: {\n      saveFinish: \"saveFinish\"\n    },\n    decls: 4,\n    vars: 0,\n    consts: [[\"content\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"modal-header\"], [1, \"modal-title\", \"m-0\"], [1, \"modal-body\", \"p-4\"], [3, \"formGroup\"], [\"type\", \"hidden\", \"formControlName\", \"categoryId\"], [\"type\", \"hidden\", \"formControlName\", \"status\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"categoryName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"categoryName\", \"placeholder\", \"T\\u00EAn nh\\u00E3n h\\u00E0ng\", \"formControlName\", \"categoryName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function AddCategoryComponent_Admin_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n        i0.ɵɵtemplate(0, AddCategoryComponent_Admin_ng_template_0_Template, 15, 5, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AddCategoryComponent_Admin_Template_button_click_2_listener() {\n          i0.ɵɵrestoreView(_r6);\n          const _r0 = i0.ɵɵreference(1);\n          return ctx.open(_r0);\n        });\n        i0.ɵɵtext(3, \"Th\\u00EAm Lo\\u1EA1i S\\u1EA3n Ph\\u1EA9m\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i4.MatButton, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName, i6.NgClass],\n    styles: [\"\"]\n  });\n  return AddCategoryComponent_Admin;\n})();","map":null,"metadata":{},"sourceType":"module"}