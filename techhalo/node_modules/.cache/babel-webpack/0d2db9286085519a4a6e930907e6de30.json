{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.url = \"http://localhost:8080/api/products\";\n    }\n    getAllProducts() {\n      return this.httpClient.get(this.url);\n    }\n    getCategories() {\n      return this.httpClient.get(`http://localhost:8080/api/categories`);\n    }\n    getSuppliers() {\n      return this.httpClient.get(`http://localhost:8080/api/suppliers`);\n    }\n    getProductsByCategory(categoryId) {\n      return this.httpClient.get(`${this.url}/category-product/${categoryId}`);\n    }\n    getAvailableProductsByCategory(categoryId, promotionCodeId) {\n      const url = `${this.url}/category-product/${categoryId}/${promotionCodeId}`;\n      return this.httpClient.get(url);\n    }\n    getProductsByCompany(supplierId) {\n      return this.httpClient.get(`${this.url}/supplier-product/${supplierId}`);\n    }\n    getAvailableProductsByCompany(supplierId, promotionCodeId) {\n      const url = `${this.url}/supplier-product/${supplierId}/${promotionCodeId}`;\n      return this.httpClient.get(url);\n    }\n    //Gộp\n    updateStatus(productId, status) {\n      const url = `${this.url}/${productId}/status`;\n      return this.httpClient.put(url, {\n        status\n      });\n    }\n    // Lấy danh sách tất cả sản phẩm satus = 1 và cả = 0 \n    getAllProduct() {\n      return this.httpClient.get(this.url + '/allproduct');\n    }\n    getAvailableProductsNotInPromotion(promotionCodeId) {\n      const url = `${this.url}/available-products/${promotionCodeId}`;\n      return this.httpClient.get(url);\n    }\n    getAll() {\n      return this.httpClient.get(this.url);\n    }\n    getOne(id) {\n      return this.httpClient.get(this.url + '/' + id);\n    }\n    getBestSeller() {\n      return this.httpClient.get(this.url + '/bestseller-admin');\n    }\n    save(product) {\n      return this.httpClient.post(this.url, product);\n    }\n    update(product, id) {\n      return this.httpClient.put(this.url + '/' + id, product);\n    }\n    delete(id) {\n      return this.httpClient.delete(this.url + '/' + id);\n    }\n  }\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}